# Root logger option
log4j.rootLogger=INFO, file, stdout
# configuration to print into file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=D:\\log\\logging.log
log4j.appender.file.MaxFileSize=12MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
# configuration to print on console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n



https://www.baeldung.com/java-log-json-output



https://ips-channel-gateway.ips-sit.cto-payments-makola.sdc-nonprod.caas.absa.co.za/health
https://mkyong.com/webservices/jax-rs/restfull-java-client-with-java-net-url/



 args=new String [] {" https://ips-channel-gateway.ips-sit.cto-payments-makola.sdc-nonprod.caas.absa.co.za/health"};
    	if (args.length != 1) {
            System.err.println("Usage: java Main <url>");
            System.exit(1);
        }

        final String url =args[0];
        System.out.println("GET " + url);
        URLConnection connection = new URL(url).openConnection();
        final InputStream inputStream = connection.getInputStream();
        final InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
        final BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
        System.out.println(bufferedReader.readLine());
        
        
        
        
        	<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<version>2.2.1.GA</version>
		</dependency>

		<!-- <dependency> <groupId>org.jboss.resteasy</groupId> <artifactId>resteasy-jaxb-provider</artifactId> 
			<version>2.2.0.GA</version> </dependency> -->

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson-provider</artifactId>
			<version>2.2.1.GA</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.0</version>
		</dependency>

<dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>2.3.0.GA</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/javassist/javassist -->
<dependency>
    <groupId>javassist</groupId>
    <artifactId>javassist</artifactId>
    <version>3.12.1.GA</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.scannotation/scannotation -->
<dependency>
    <groupId>org.scannotation</groupId>
    <artifactId>scannotation</artifactId>
    <version>1.0.3</version>
</dependency>
--------------------------------
	BufferedReader br = null;
		try {
			URL url = new URL(
					"http://dummy.restapiexample.com/api/v1/employees");
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setRequestMethod("GET");
			conn.setRequestProperty("Accept", "application/json");

			if (conn.getResponseCode() != 200) {
				throw new RuntimeException("Failed : HTTP error code : " + conn.getResponseCode());
			}

			 br = new BufferedReader(new InputStreamReader(
					(conn.getInputStream())));
			

			
			String output;
			System.out.println("Output from Server .... \n");
			while ((output = br.readLine()) != null) {

				System.out.println(output);
			}
			
			conn.disconnect();
		
		} catch (MalformedURLException e) {
			

			e.printStackTrace();
		} catch (IOException e) {

			e.printStackTrace();
			
		}
		
		return "no exception";





private static Logger LOGGER = LogManager.getLogger(RequestViewServiceImpl.class); 
